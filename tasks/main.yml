---
- name: Create version folder
  file:
    state: directory
    path: '/opt/convoy-v{{ docker_convoy_version }}'
  become: yes
  tags:
    - docker
    - convoy

- name: Download convoy plugin
  unarchive:
    src: "https://github.com/rancher/convoy/releases/download/v{{ docker_convoy_version }}/convoy.tar.gz"
    remote_src: yes
    dest: "/opt/convoy-v{{ docker_convoy_version }}"
    owner: root
    group: root
    creates: "/opt/convoy-v{{ docker_convoy_version }}/convoy"
  become: yes
  tags:
    - docker
    - convoy

- name: Install last version
  file:
    src: "/opt/convoy-v{{ docker_convoy_version }}/convoy/{{item}}"
    dest: "{{docker_convoy_bindir}}/{{ item }}"
    state: link
    owner: root
    group: root
  become: yes
  with_items:
    - "convoy"
    - "convoy-pdata_tools"
  tags:
    - docker
    - convoy

- name: Create docker plugin
  lineinfile:
    path: '/etc/docker/plugins/convoy.spec'
    regexp: '^unix:///var/run/convoy/convoy.sock$'
    line: 'unix:///var/run/convoy/convoy.sock'
    create: yes
    owner: root
    group: root
  become: yes
  with_items:
    - "convoy"
    - "convoy-pdata_tools"
  tags:
    - docker
    - convoy

- name: Copy convoy daemon start script
  copy:
    src: convoy-backup.py
    dest: "{{docker_convoy_bindir}}/"
    mode: 0744
  tags:
    - convoy
  become: true

- name: Copy convoy daemon start script
  copy:
    src: convoy-start.sh
    dest: "{{docker_convoy_bindir}}/"
    mode: 0744
  tags:
    - convoy
  become: true

- name: Copy convoy daemon service
  copy:
    src: convoy.service
    dest: /etc/systemd/system
    mode: 0644
  tags:
    - convoy
  become: true

- name: Start convoy dameon
  command: systemctl daemon-reload
  tags:
    - convoy
  become: true

- name: Ensure the Convoy service is running
  service:
    name=convoy.service
    state=started
    enabled=yes
  tags:
    - docker
    - convoy
  become: true

# vim:ft=ansible:
